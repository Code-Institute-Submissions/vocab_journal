to ask:

- cant set a value for os.getenv('MONGO_URI')  
	- need to hide the sensitive uri

- datepicker materialize - NOTHING WORKS!!!!
	- defaultDate doesnt work!
	- cant set a default time like sometime in the 80s
	- yearRange doesnt work!
	- RESOLVED!!! https://stackoverflow.com/questions/30324552/how-to-set-the-date-in-materialize-datepicker/30324855#30324855
	
- how to dynamically change the navbar items - currently done in a chicken shit way which only works with dashboard
	- change "log in" to "log out" if user in session

- tags input when disabled, doesnt return a response - how to handle it?  RESOLVED!!!!!

- how to manage two submit buttons - RESOLVED!!!!!

- the URI has been moved to another py file. if i add it to my gitingore, will it still work?

- source is left blank will raise a keyError???? why? how to counter?

- how to connect the collections together

- insert_vocab should be smart enough to see if a vocab already exits! ... DONE!


TO DO:
- resolve the data issue with the new fix
- add admin boolean to all users    ... DONE
- define two premade account for the examiners
	- user - basic account   - user
	- admin - admin account  - username admin
	    - only Admin users can add source!
- remove the add button from the API interface in add_vocab caus eu dont need it! GET is enough .... DONE!
- navbar 
	- using session["user"], alternate between "login" and "log out"  .... DONE!
	- user's name is now displayed  .... DONE!
	- the layout was changed!       .... DONE!
		- "Welcome Damian Rodbari, Add Vocab, Logout"    - if user is logged in
		- "Log in, Register"                         - if no user has logged in
	- if the user is admin, then show add_source link! ONLY ADMINS can add source .... DONE! 

- add_source.html page to be added for ADMINS ONLY! .... DONE
- edit vocab
- delete vocabs .... DONE
- if vocab already exists load up the "existing vocab page" - the indivual vocab screen .... DONE
- admins will also get to 
    - see how many users there are
    - delete users
    - delete vocabs added by others
- add "dbconfig.py" to git ignore!
- dash should show all the vocabs added by the user 
- users will get to switch between the two modes
    - show user added vocabs (if a user has logged in)
    - show all vocabs
- TOOLTIPS for add_vocab page items 

TO ASK NEW!
    
    GIT:
        - seriously FUCKED UP! 
        - see the content of git
        - so much garbage added to the git
            .~c9_invoke_4U6qw5.py
            .~c9_invoke_7zoQ9Y.py
            .~c9_invoke_91X4CA.py
            .~c9_invoke_9jsJMv.py
        - templates/addsetup.html still in there!???
    
    - user_vocab_only DOESNT WORK!
        - how do i pass in the modified vocabs?
    - how to handle upvotes upon click? are they just anchors?
        - flask ajax upload or fetch()
    - the first page should be the api
        - giving the user everything there is to know about the vocab he/she wants to add
            - after the definition page, get redirected to ad_vocabulary
            
            
            
            
notes:
    dash:
        users can "view", "edit" and "delete" their own added vocabs. HOWEVER, admins have the power to bypass this.
        "admins" can "edit" and "delete" all vocabs

    add_vocab:
        the first page should be definition page where the user gets all the info he needs from the previous page.
    REMOVE COMMENTS FROM THE VOCAB DATABASE
    
    add "last_lookup_date" to the vocab views
     - if not "" then show, just like reference, context and all that
      
     
     
     
     edit vocabs
        def view_vocab(vocab_id)
         - >>>>>>>>>>>>>>>>>>>>>>> IMPORTANT!!! the "mod_date" should be moved to the edit or update function on line 334
     fix api (first page)
     upvoting or liking!
     dash visuals - maybe switch to cards?
        - handle user profile access 
     add more filters to dash
        - sorts(ordering as in older first)
        - 
     
     manage sources
        - view all existing sources ... DONE!
        - add more sources within the same page ... DONE!
        - ability to delete sources within the same page ... DONE!
        - flash messages centered ... DONE!
     
     cater for "vocab_count" in user documents -- DONE!
        - increment by one everytime they successfully add a vocab ---- Done
     
    - create a function for current date! ................................. DONE!
    - users management .................................................... DONE!
        - view user profile ............................................... DONE!
            - view user stats ............................................. DONE!
                - number of added vocabs .................................. DONE!
                - show vocabs ............................................. DONE!
                - dob ..................................................... DONE!
                - admin boolean ........................................... DONE!
        
    DONE LIST!
     - vocab_count for user now correctly functions using .count() ........ DONE!
     - start with edit_vocab
        - update_vocab to finalise 
     - change insert_vocab to work with id,  "insert_vocab/<vocab_id>" instead of "insert_vocab/<vocab>"
     
     - fix edit_vocab and update_vocab .................................... DONE!
        - dont forget to add the following to it
            - mongo.db.vocabs.update({'_id': ObjectId(vocab_id)}, { "$set": { "mod_date": get_today_date()} })
    
    NEW LIST!
        - add more filters for dash ....................................... DONE!
             - defualt order should be latest added or modified. .......... DONE! (not working! BUG????)
             - search by source ........................................... DONE!
             - add clear fliter ........................................... DONE!
        - definitions API  ................................................ DONE!
            - create function in another pyfile and then import ........... DONE!
        - Likes functionality added ....................................... DONE!
            - create a like profile for each user ......................... DONE!
            - create function to check if user has indeed liked a vocab ... DONE!
            - increment like counter for that vocab ....................... DONE!
        - disable enter key on forms (ONLY on add_vocab template) ......... DONE!   
        - apparently there is an $inc option just like $set for mongoDB ... DONE!
            - user $inc for views, lookup_count ........................... DONE!
        - what should happen if you delete a vocab? ....................... DONE!
            - likes ....................................................... DONE!
                - handle user's like list ................................. DONE!
        - unittest completion - how do u unittest a template???
        - styling using sass and css
            - tooltips for all the elements in add_vocab template
            - add basic footer
            - navigations
                - if vocab page was called from check_vocab then the button at the end should say "back to the vocab"
                instead of "back to the list"
        
    problems:
        - heroku & git -- RESOLVED!!!
            - removed "setup_config.py" from git and added it to gitignore
                - now heroku cannot locate the file - ModuleNotFoundError: No module named 'setup_config'
                - and i cant push to github - fatal: remote origin already exists. ... RESOLVED!
                - GIHUB potential security vulnerability
                
        - sorting by date doesnt work since it only looks at the first two numbers of the date. it
        treats the date as a number. so 12/08/2018 comes before 22/05/2018. it completely ignores the months
         and just takes the days. --- change the format to "2018-11-09" ... DONE!

                    
        - rename button or add labels for items in filter div .......................... DONE!
        - removed the user_id out of the get_filtered function! ........................ DONE!
        - delete_source page show the vocabs being used by source ...................... DONE!
        - change of date of births for users ........................................... DONE!
        - dash
            - add results numbers to dash .............................................. DONE!
            - username = YOU ........................................................... DONE!
            - not returning any results ................................................ DONE!
            - vocab contents inside the accordions ..................................... DONE!
        - view_user
            - put both favourited vocabs and added vocabs in accordions ................ DONE!
            - adjust accordions (get rid of the gap in the middle)      <<<<<<<<<<  ATTENTION!
            - style it somehow? maybe get rid of the accordions all together? <<<<  ATTENTION!
        - add vocabs
            - address if no synonyms or examples - exactly the same way as dash ........ DONE!
            - replace difficulty range shit with normal number input ................... DONE!
        - vocab 
            - toast for like (you have liked "vocab") .................................. DONE!       
            - find a way to add API in there (press a button and it loads into a DIV)... DONE!
                - huge button centered in the middle of the page ....................... DONE!  
            - change button layouts (left:Delete, middle:edit, right:back to dash ...... DONE!
        - styling
            - reponsiveness m4 s3 ...                                   <<<<<<<<<<  ATTENTION!
            - add BASIC footer ......................................................... DONE!
            - add vocab button on dash? ................................................ DONE!
            - dash? 
            - check_vocab
            - add_vocab
        - logic (run.py) 
            - add search by last_lookup_date for filter .................................... DONE!
            - after updating vocab redirect to view_vocab instead of dash .................. DONE!
        - unittest completion - how do u unittest a template???
                - KEEP IT LIGHT
                - only test the logic
                - for templates, check to see if something exists! and then change a small item on the page
                    - for example: if there should be a banana on the page, then add freakin banana
                    
        - WRITE UP
            - readme.md

            - BUG encountered:
                - the persistent b' ' on heroku
                - views count with every like or dislike, inc -1
                - date formats - reversed order
                
            - challenges
                - AJAX with flask template
                - convert data from flask template to javascript
                - API 
                - adding tags
                - dynamic navbar
                
            - future features to be added
                - more languages
                - ability to download your data
                - adding pronounciations
                - vocab game to test the user's memory
                